Arquivos que cobrem o Brasil

    ETOTO_2022_v1_15s_S60W030_bed.nc (Latitude: 60°S a 0°N, Longitude: 30°W a 45°W)
    ETOTO_2022_v1_15s_S60W045_bed.nc (Latitude: 60°S a 0°N, Longitude: 45°W a 60°W)
    ETOTO_2022_v1_15s_S60W060_bed.nc (Latitude: 60°S a 0°N, Longitude: 60°W a 75°W)
    ETOTO_2022_v1_15s_S75W030_bed.nc (Latitude: 75°S a 60°S, Longitude: 30°W a 45°W, pequena parte no extremo sul do Brasil)
    ETOTO_2022_v1_15s_S75W045_bed.nc (Latitude: 75°S a 60°S, Longitude: 45°W a 60°W, pequena parte no extremo sul do Brasil)

https://www.ngdc.noaa.gov/thredds/catalog/global/ETOPO2022/15s/15s_bed_elev_netcdf/catalog.html


import xarray as xr  # pip install xarray netCDF4 numpy
import numpy as np

def get_altitude(lat, lon, file_paths):
    """
    Retorna a altitude correspondente para uma dada latitude e longitude
    a partir de arquivos NetCDF.
    
    Args:
        lat (float): Latitude em graus.
        lon (float): Longitude em graus.
        file_paths (list): Lista de caminhos para arquivos NetCDF.

    Returns:
        float: Altitude correspondente em metros.
    """
    # Corrigir longitude para formato 0° a 360° se necessário
    if lon < 0:
        lon = 360 + lon

    for file_path in file_paths:
        try:
            # Abre o arquivo NetCDF
            ds = xr.open_dataset(file_path)
            
            # Verifica se a latitude e longitude estão dentro do intervalo do arquivo
            lat_range = ds['lat'].values
            lon_range = ds['lon'].values
            
            if lat_range.min() <= lat <= lat_range.max() and lon_range.min() <= lon <= lon_range.max():
                # Localiza o índice mais próximo das coordenadas
                lat_idx = np.abs(lat_range - lat).argmin()
                lon_idx = np.abs(lon_range - lon).argmin()

                # Extrai a altitude correspondente
                altitude = ds['bed'].isel(lat=lat_idx, lon=lon_idx).values
                
                ds.close()
                return altitude

        except Exception as e:
            print(f"Erro ao processar o arquivo {file_path}: {e}")
    
    raise ValueError("Coordenadas fora do alcance dos arquivos fornecidos.")

# Exemplos de uso
file_paths = [
    "ETOTO_2022_v1_15s_S60W030_bed.nc",
    "ETOTO_2022_v1_15s_S60W045_bed.nc",
    "ETOTO_2022_v1_15s_S60W060_bed.nc"
]

# Latitude e longitude de exemplo
lat = -23.5505  # São Paulo
lon = -46.6333

altitude = get_altitude(lat, lon, file_paths)
print(f"A altitude em {lat}, {lon} é {altitude} metros.")

