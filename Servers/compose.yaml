services:
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
       # - C:\Users\andre\OneDrive\Documents\NetBeansProjects\binancerobot\BinanceRobot\PostBlog\PostBlog\FlaskSite\DockerContainer\TecHubContainer\db\database\:/var/lib/mysql 
       # computador carol
       # - D:\NetbeansProjects\binancerobot\BinanceRobot\PostBlog\PostBlog\FlaskSite\DockerContainer\TecHubContainer\db\database\:/var/lib/mysql
       # Optei pelo volume com acesso ao diret√≥rio
      - db-data:/var/lib/mysql
    networks:
      - backnet
    environment:
      - MYSQL_DATABASE=example
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
      - TZ=America/Sao_Paulo
    expose:
      - 3306
      - 33060
    ports:
      - 3306:3306
      
  backend:
    build:
      context: backend
      target: builder
    restart: always
    secrets:
      - db-password
    ports:
      - 8000:8000
    networks:
      - backnet
      - frontnet
    environment:
      - TZ=America/Sao_Paulo
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined      
    depends_on:
      db:
        condition: service_healthy

  proxy:
    build: proxy
    restart: always
    ports:
      - 80:80
      - 443:443 
    depends_on: 
      - backend
    networks:
      - frontnet
    environment:
      - TZ=America/Sao_Paulo
        
volumes:
  db-data:

secrets:
  db-password:
    file: db/password.txt

networks:
  backnet:
  frontnet:
